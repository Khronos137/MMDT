
<!-- <?xml version="1.0" ?> -->
<launch>
  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="true"/>
  <arg name="use_sim_time" default="true"/>
    <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find mmdt_rat20)/worlds/empty.world"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <!-- Load the URDF into the ROS Parameter Server -->
  <param name="robot_description" command="$(find xacro)/xacro.py '$(find mmdt_rat20)/urdf/mmdt_rat20.urdf'" />

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node pkg="gazebo_ros" type="spawn_model" name="urdf_spawner" respawn="false" output="screen"
	      args="-R -1.57 -Y 0 -x -0 -z 0.3 -urdf -model mmdt_rat20 -param robot_description"/>
  <!-- <node pkg="gazebo_ros" type="spawn_model" name="urdf_spawner" respawn="false" output="screen"
	      args="-z 0.3 -urdf -model mmdt_rat20 -param robot_description"/> -->

        <!-- args="-R -1.57 -z 0.3 -urdf -model manipulator_h -param robot_description"/> -->

  <!-- ros_control robotis manipulator launch file -->
  <!-- <include file="$(find manipulator_h_gazebo)/launch/position_controller.launch" /> -->
  <include file="$(find mmdt_rat20)/launch/effortPosMMDT_controller.launch" />
  
</launch> 

